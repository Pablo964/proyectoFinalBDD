CREATE OR REPLACE PACKAGE BODY PARAGON.ESTADISTICAS
IS
    PROCEDURE BUSCAR(CUR_GLOBAL OUT SYS_REFCURSOR, V_CORREO VARCHAR2, 
        V_NIVEL NUMBER, V_DANYO NUMBER, V_VELOCIDAD NUMBER)
    IS
        NUM_HEROES NUMBER;
    BEGIN
        SELECT DISTINCT COUNT(*)
            INTO NUM_HEROES
            FROM HEROES H, TENER_HEROES TH
            WHERE TH.EMAIL_CUENTA_TENER = V_CORREO
            AND TH.NOMBRE_HEROE_TENER = H.NOMBRE_HEROE
            AND (H.NVL_HEROE >= V_NIVEL OR H.NVL_HEROE IS NULL)
            AND V_DANYO <= H.P_DANYO_HEROE
            AND V_VELOCIDAD <= H.P_VELOCIDAD_HEROE;
        
        IF NUM_HEROES > 5 THEN
        
            OPEN CUR_GLOBAL FOR SELECT DISTINCT H.NOMBRE_HEROE, NVL(H.NVL_HEROE,0),
                        H.P_DANYO_HEROE, H.P_VELOCIDAD_HEROE
                        FROM HEROES H, TENER_HEROES TH
                        WHERE TH.EMAIL_CUENTA_TENER = V_CORREO
                        AND TH.NOMBRE_HEROE_TENER = H.NOMBRE_HEROE
                        AND (H.NVL_HEROE >= V_NIVEL OR H.NVL_HEROE IS NULL)
                        AND V_DANYO <= H.P_DANYO_HEROE
                        AND V_VELOCIDAD <= H.P_VELOCIDAD_HEROE;
                        
        ELSIF NUM_HEROES <= 5 THEN
        
           OPEN CUR_GLOBAL FOR SELECT DISTINCT H.NOMBRE_HEROE, NVL(H.NVL_HEROE,0),
                    H.P_DANYO_HEROE, H.P_VELOCIDAD_HEROE, R.CODIGO_GEMAS_RECOMENDAR,
                    R.NOMBRE_CARTAS_RECOMENDAR
                    FROM HEROES H, TENER_HEROES TH, RECOMENDAR R
                    WHERE TH.EMAIL_CUENTA_TENER = V_CORREO
                    AND TH.NOMBRE_HEROE_TENER = H.NOMBRE_HEROE
                    AND R.NOMBRE_HEROE_RECOMENDAR = H.NOMBRE_HEROE
                    AND (H.NVL_HEROE >= V_NIVEL OR H.NVL_HEROE IS NULL)
                    AND V_DANYO <= H.P_DANYO_HEROE
                    AND V_VELOCIDAD <= H.P_VELOCIDAD_HEROE;
        END IF;  
    END;
    
    PROCEDURE CUENTA_MAS_HEROES(V_NOMBRE_CUENTA OUT VARCHAR2, CANTIDAD_HEROES OUT NUMBER,
        V_AMIGOS OUT NUMBER)
    IS
    BEGIN
        SELECT *
        INTO CANTIDAD_HEROES, V_NOMBRE_CUENTA
        FROM
        (
            SELECT COUNT(*), TH.EMAIL_CUENTA_TENER 
            FROM HEROES H, TENER_HEROES TH
            WHERE H.NOMBRE_HEROE = TH.NOMBRE_HEROE_TENER
            GROUP BY TH.EMAIL_CUENTA_TENER
            HAVING COUNT(*) = (SELECT MAX(COUNT(*))
                                FROM HEROES H, TENER_HEROES TH
                                WHERE H.NOMBRE_HEROE = TH.NOMBRE_HEROE_TENER
                                GROUP BY TH.EMAIL_CUENTA_TENER)
        )
        WHERE ROWNUM = 1;
                                
        SELECT COUNT(*)
        INTO V_AMIGOS
        FROM SER_AMIGOS SA
        WHERE SA.EMAIL_AMIGO = V_NOMBRE_CUENTA
        OR SA.EMAIL_CUENTA = V_NOMBRE_CUENTA;
    
    EXCEPTION 
        WHEN TOO_MANY_ROWS THEN
        --ESTA EXCEPCIÓN NO SE PUEDE DAR PORQUE HE LIMITADO EL NÚMERO DE FILAS A 1
            RAISE_APPLICATION_ERROR(-20100, 'DEMASIADAS COINCIDENCIAS');
    END;
    
    PROCEDURE HEROE_MAS_PODEROSO(V_NOMBRE OUT VARCHAR2, V_NIVEL OUT NUMBER, V_DANYO OUT NUMBER,
        V_VELOCIDAD OUT NUMBER, V_PODER_MAX OUT NUMBER)
    IS
        CURSOR C_HEROES IS SELECT H.NOMBRE_HEROE, NVL(H.NVL_HEROE, 1) NIVEL, NVL(H.P_DANYO_HEROE, 1) DANYO, NVL(H.P_VELOCIDAD_HEROE, 1) VELOCIDAD
                            FROM HEROES H;
        V_CUR C_HEROES%ROWTYPE;
        V_PODER NUMBER;
    BEGIN
        V_PODER_MAX := 0;
        OPEN C_HEROES;
        FETCH C_HEROES INTO V_CUR;
        WHILE C_HEROES%FOUND LOOP
            V_PODER := (V_CUR.DANYO + V_CUR.VELOCIDAD)*V_CUR.NIVEL;
            
            IF V_PODER_MAX < V_PODER THEN
                V_PODER_MAX := V_PODER;
                V_NIVEL := V_CUR.NIVEL;
                V_NOMBRE := V_CUR.NOMBRE_HEROE;
                V_DANYO := V_CUR.DANYO;
                V_VELOCIDAD := V_CUR.VELOCIDAD;
            END IF;
            FETCH C_HEROES INTO V_CUR;
        END LOOP;
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN
            INSERT INTO HEROES H (H.NOMBRE_HEROE, H.NVL_HEROE, H.P_DANYO_HEROE, H.P_VELOCIDAD_HEROE) 
            VALUES ('INVENCIBLE', 200, 100, 100);
    END;
    PROCEDURE BUILD_MAS_USADA(V_NOMBRE OUT VARCHAR2, V_NOMBRE_CARTA OUT VARCHAR2, V_GEMA OUT NUMBER)
    IS
        CURSOR C_BUILD IS SELECT A.NOMBRE_HEROE_ASIGNAR NOM, A.CODIGO_GEMAS_DESBLOQUEAR_ASIG GEMA,
                            A.NOMBRE_CARTAS_DESBLOQUEAR_ASIG CARTA
                            FROM ASIGNAR A;
        V_CUR C_BUILD%ROWTYPE;
        
        CURSOR C_BUILD2 IS SELECT A.NOMBRE_HEROE_ASIGNAR NOM, A.CODIGO_GEMAS_DESBLOQUEAR_ASIG GEMA,
                            A.NOMBRE_CARTAS_DESBLOQUEAR_ASIG CARTA
                            FROM ASIGNAR A;
        V_CUR2 C_BUILD2%ROWTYPE;
        
        VECES NUMBER := 0;
        VECES_MAX NUMBER := 0;
    BEGIN
        OPEN C_BUILD;
        LOOP
            FETCH C_BUILD INTO V_CUR;
            EXIT WHEN C_BUILD%NOTFOUND;
            OPEN C_BUILD2;
            LOOP
                FETCH C_BUILD2 INTO V_CUR2;
                EXIT WHEN C_BUILD2%NOTFOUND;
                IF V_CUR2.NOM = V_CUR.NOM AND V_CUR2.GEMA = V_CUR.GEMA 
                    AND V_CUR2.CARTA = V_CUR.CARTA
                THEN
                    VECES := VECES + 1;
                END IF; 
            END LOOP;
            IF VECES > VECES_MAX THEN
                VECES_MAX := VECES;
                V_NOMBRE := V_CUR.NOM;
                V_NOMBRE_CARTA := V_CUR.CARTA;
                V_GEMA := V_CUR.GEMA;
            END IF;
            VECES := 0;
        END LOOP;
        CLOSE C_BUILD;
        CLOSE C_BUILD2;
    END;
END;
/

